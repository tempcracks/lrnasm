> ../Ë£ÇÁ∫π#978:
### –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤ x86/x86-64 –∏ –∏—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è

---

## üîπ 1. –†–µ–≥–∏—Å—Ç—Ä—ã –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (GPR)
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏, –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏.

### 1.1. 32-–±–∏—Ç–Ω—ã–µ (EAX, EBX, ECX, EDX)
| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 | –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è                     |
|---------|---------------------------------------------------------------------------|-----------------------------------------------|
| EAX | –ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä (–æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π)                              | –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π (–≤ Linux syscalls) |
| EBX | –ë–∞–∑–æ–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä (—á–∞—Å—Ç–æ —Ö—Ä–∞–Ω–∏—Ç —É–∫–∞–∑–∞—Ç–µ–ª–∏)                                 | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ xlat, cpuid                |
| ECX | –°—á—ë—Ç—á–∏–∫ (–¥–ª—è —Ü–∏–∫–ª–æ–≤)                                                     | loop, rep –ø—Ä–µ—Ñ–∏–∫—Å—ã                        |
| EDX | –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–∞–Ω–Ω—ã—Ö (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ EAX)                           | –•—Ä–∞–Ω–∏—Ç —Å—Ç–∞—Ä—à–∏–µ –±–∏—Ç—ã –≤ —É–º–Ω–æ–∂–µ–Ω–∏–∏/–¥–µ–ª–µ–Ω–∏–∏       |

–ü—Ä–∏–º–µ—Ä:
mov eax, 5    ; –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è
add ebx, eax  ; –°–ª–æ–∂–µ–Ω–∏–µ
mul ecx       ; EAX * ECX ‚Üí EDX:EAX
---

### 1.2. 16-–±–∏—Ç–Ω—ã–µ (AX, BX, CX, DX)
| –†–µ–≥–∏—Å—Ç—Ä | –ß–∞—Å—Ç–∏          | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                  |
|---------|----------------|--------------------------------------------|
| AX  | AH (—Å—Ç–∞—Ä—à–∏–π) + AL (–º–ª–∞–¥—à–∏–π) | –û—Å–Ω–æ–≤–Ω–æ–π 16-–±–∏—Ç–Ω—ã–π –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä             |
| BX  | BH + BL         | –ë–∞–∑–æ–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ ([bx+si])  |
| CX  | CH + CL         | –°—á—ë—Ç—á–∏–∫ —Ü–∏–∫–ª–æ–≤ (loop)                    |
| DX  | DH + DL         | –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ (in/out)    |

–ü—Ä–∏–º–µ—Ä:
mov ax, 0x1234  ; –ó–∞–ø–∏—Å—å 16-–±–∏—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
mov al, 0x56    ; –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç AX = 0x56
---

### 1.3. 8-–±–∏—Ç–Ω—ã–µ (AL, AH, BL, BH, ...)
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–π—Ç–∞–º–∏:
mov al, 'A'     ; –ó–∞–ø–∏—Å—å —Å–∏–º–≤–æ–ª–∞
and bl, 0xF0    ; –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏—Ç–æ–≤
---

## üîπ 2. –£–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –∏–Ω–¥–µ–∫—Å–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏.

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|---------------------------------------------------------------------------|
| ESI | Source Index (–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π: lods, movs)            |
| EDI | Destination Index (–ø—Ä–∏—ë–º–Ω–∏–∫ –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π)                       |
| ESP | Stack Pointer (—É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–µ—Ä—à–∏–Ω—É —Å—Ç–µ–∫–∞)                                |
| EBP | Base Pointer (–±–∞–∑–∞ —Å—Ç–µ–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º –∏ –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º) |

–ü—Ä–∏–º–µ—Ä:
mov esi, source  ; –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫
mov edi, dest    ; –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø—Ä–∏—ë–º–Ω–∏–∫
rep movsb        ; –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–π—Ç–æ–≤
---

## üîπ 3. –°–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã
–û–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å–µ–≥–º–µ–Ω—Ç—ã –ø–∞–º—è—Ç–∏ (–∞–∫—Ç—É–∞–ª—å–Ω—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –∏ –∑–∞—â–∏—â—ë–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ –±–µ–∑ —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–∏).

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|---------------------------------------------------------------------------|
| CS  | Code Segment (—Å–µ–≥–º–µ–Ω—Ç –∫–æ–¥–∞)                                               |
| DS  | Data Segment (—Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö)                                             |
| SS  | Stack Segment (—Å–µ–≥–º–µ–Ω—Ç —Å—Ç–µ–∫–∞)                                             |
| ES  | Extra Segment (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö)                             |
| FS  | –î–æ–ø. —Å–µ–≥–º–µ–Ω—Ç (–≤ Linux —Ö—Ä–∞–Ω–∏—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ TLS - Thread Local Storage)     |
| GS  | –î–æ–ø. —Å–µ–≥–º–µ–Ω—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –≤ —è–¥—Ä–µ –û–°)              |

–ü—Ä–∏–º–µ—Ä (—Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º):
mov ax, 0x07C0
mov ds, ax  ; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
---

## üîπ 4. –†–µ–≥–∏—Å—Ç—Ä—ã —Ñ–ª–∞–≥–æ–≤ (EFLAGS/RFLAGS)
–•—Ä–∞–Ω—è—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞. –ö–ª—é—á–µ–≤—ã–µ —Ñ–ª–∞–≥–∏:

| –§–ª–∞–≥  | –ù–∞–∑–≤–∞–Ω–∏–µ         | –û–ø–∏—Å–∞–Ω–∏–µ                                      |

> ../Ë£ÇÁ∫π#978:
|-------|------------------|----------------------------------------------|
| CF | Carry Flag       | –ü–µ—Ä–µ–Ω–æ—Å/–∑–∞—ë–º –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–µ                    |
| ZF | Zero Flag        | –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ = 0                       |
| SF | Sign Flag        | –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π (—Å—Ç–∞—Ä—à–∏–π –±–∏—Ç = 1)    |
| OF | Overflow Flag    | –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–Ω–∞–∫–æ–≤–æ–≥–æ —á–∏—Å–ª–∞                 |
| IF | Interrupt Flag   | –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã—Ö –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π             |

–ü—Ä–∏–º–µ—Ä:
cmp eax, ebx  ; –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ZF, SF, CF
jz equal      ; –ü–µ—Ä–µ—Ö–æ–¥, –µ—Å–ª–∏ ZF=1
---

## üîπ 5. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å (EIP/RIP)
- EIP (32-bit) / RIP (64-bit) ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
- –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–ø—Ä—è–º—É—é (—Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ jmp, call, ret).

–ü—Ä–∏–º–µ—Ä:
call func  ; –°–æ—Ö—Ä–∞–Ω—è–µ—Ç EIP/RIP –≤ —Å—Ç–µ–∫–µ –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
---

## üîπ 6. –†–µ–≥–∏—Å—Ç—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (CR0-CR4)
–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|---------------------------------------------------------------------------|
| CR0 | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—â–∏—â—ë–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º, —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–µ–π (PG), –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º   |
| CR2 | –ê–¥—Ä–µ—Å, –≤—ã–∑–≤–∞–≤—à–∏–π Page Fault (#PF)                                         |
| CR3 | –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ç–∞–±–ª–∏—Ü—É —Å—Ç—Ä–∞–Ω–∏—Ü (PML4/PDPT)                                  |
| CR4 | –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (PAE, SMEP, UMIP)                                     |

–ü—Ä–∏–º–µ—Ä (–≤–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–∏):
mov eax, cr0
or eax, 0x80000000  ; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏—Ç–∞ PG
mov cr0, eax
---

## üîπ 7. XMM/YMM/ZMM (SIMD-—Ä–µ–≥–∏—Å—Ç—Ä—ã)
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (SSE, AVX).

| –†–µ–≥–∏—Å—Ç—Ä—ã | –†–∞–∑–º–µ—Ä  | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏                     |
|----------|---------|-------------------------------|
| XMM0-XMM15 | 128-bit | SSE/SSE2 (movdqa, addps)  |
| YMM0-YMM15 | 256-bit | AVX/AVX2 (vmulps, vpermq) |
| ZMM0-ZMM31 | 512-bit | AVX-512 (vpmadd52luq)       |

–ü—Ä–∏–º–µ—Ä (—Å–ª–æ–∂–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤):
movdqa xmm0, [vec1]  ; –ó–∞–≥—Ä—É–∑–∫–∞ 128-–±–∏—Ç–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
paddd xmm0, [vec2]   ; –ü–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ–µ —Å–ª–æ–∂–µ–Ω–∏–µ
---

## üîπ 8. –†–µ–≥–∏—Å—Ç—Ä—ã –æ—Ç–ª–∞–¥–∫–∏ (DR0-DR7)
–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç —Ç–æ—á–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∞ (hardware breakpoints).

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                      |
|---------|--------------------------------|
| DR0-DR3 | –ê–¥—Ä–µ—Å–∞ —Ç–æ—á–µ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∞         |
| DR6    | –°—Ç–∞—Ç—É—Å —Ç–æ—á–µ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∞        |
| DR7    | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∞–º–∏ –æ—Å—Ç–∞–Ω–æ–≤–∞ |

---

## üîπ 9. MSR (Model-Specific Registers)
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º (–¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ rdmsr/wrmsr).

| –†–µ–≥–∏—Å—Ç—Ä  | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                          |
|----------|------------------------------------|
| IA32_EFER | –í–∫–ª—é—á–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ (x86-64) |
| IA32_APIC_BASE | –ê–¥—Ä–µ—Å APIC                      |

–ü—Ä–∏–º–µ—Ä (–≤–∫–ª—é—á–µ–Ω–∏–µ NX-–±–∏—Ç–∞):
mov ecx, 0xC0000080  ; IA32_EFER
rdmsr
or eax, 0x800        ; NX-–±–∏—Ç
wrmsr
---

## üîπ –ò—Ç–æ–≥: –∫–æ–≥–¥–∞ –∫–∞–∫–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
| –ó–∞–¥–∞—á–∞                | –†–µ–≥–∏—Å—Ç—Ä—ã                          |
|-----------------------|----------------------------------|
| –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞            | EAX, EBX, ECX, EDX               |
| –ê–¥—Ä–µ—Å–∞—Ü–∏—è –ø–∞–º—è—Ç–∏      | ESI, EDI, ESP, EBP               |
| –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º    | EIP/RIP                          |
| –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç–µ–∫–æ–º      | ESP, EBP                         |
| SIMD-–æ–ø–µ—Ä–∞—Ü–∏–∏         | XMM0-XMM15, YMM0-YMM15           |
| –°–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ | CR0-CR4, MSR, EFLAGS       |

–ü—Ä–∏–º–µ—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ Linux (32-bit):
mov eax, 1   ; sys_exit
mov ebx, 0   ; —Å—Ç–∞—Ç—É—Å
int 0x80
–ü—Ä–∏–º–µ—Ä –≤ 64-bit:
mov rax, 60  ; sys_exit
mov rdi, 0   ; —Å—Ç–∞—Ç—É—Å
syscall
> ../Ë£ÇÁ∫π#978:
### –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤ x86/x86-64 –∏ –∏—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è

---

## üîπ 1. –†–µ–≥–∏—Å—Ç—Ä—ã –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (GPR)
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏, –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏.

### 1.1. 32-–±–∏—Ç–Ω—ã–µ (EAX, EBX, ECX, EDX)
| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 | –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è                     |
|---------|---------------------------------------------------------------------------|-----------------------------------------------|
| EAX | –ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä (–æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π)                              | –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π (–≤ Linux syscalls) |
| EBX | –ë–∞–∑–æ–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä (—á–∞—Å—Ç–æ —Ö—Ä–∞–Ω–∏—Ç —É–∫–∞–∑–∞—Ç–µ–ª–∏)                                 | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ xlat, cpuid                |
| ECX | –°—á—ë—Ç—á–∏–∫ (–¥–ª—è —Ü–∏–∫–ª–æ–≤)                                                     | loop, rep –ø—Ä–µ—Ñ–∏–∫—Å—ã                        |
| EDX | –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–∞–Ω–Ω—ã—Ö (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ EAX)                           | –•—Ä–∞–Ω–∏—Ç —Å—Ç–∞—Ä—à–∏–µ –±–∏—Ç—ã –≤ —É–º–Ω–æ–∂–µ–Ω–∏–∏/–¥–µ–ª–µ–Ω–∏–∏       |

–ü—Ä–∏–º–µ—Ä:
mov eax, 5    ; –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è
add ebx, eax  ; –°–ª–æ–∂–µ–Ω–∏–µ
mul ecx       ; EAX * ECX ‚Üí EDX:EAX
---

### 1.2. 16-–±–∏—Ç–Ω—ã–µ (AX, BX, CX, DX)
| –†–µ–≥–∏—Å—Ç—Ä | –ß–∞—Å—Ç–∏          | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                  |
|---------|----------------|--------------------------------------------|
| AX  | AH (—Å—Ç–∞—Ä—à–∏–π) + AL (–º–ª–∞–¥—à–∏–π) | –û—Å–Ω–æ–≤–Ω–æ–π 16-–±–∏—Ç–Ω—ã–π –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä             |
| BX  | BH + BL         | –ë–∞–∑–æ–≤—ã–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ ([bx+si])  |
| CX  | CH + CL         | –°—á—ë—Ç—á–∏–∫ —Ü–∏–∫–ª–æ–≤ (loop)                    |
| DX  | DH + DL         | –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ (in/out)    |

–ü—Ä–∏–º–µ—Ä:
mov ax, 0x1234  ; –ó–∞–ø–∏—Å—å 16-–±–∏—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
mov al, 0x56    ; –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç AX = 0x56
---

### 1.3. 8-–±–∏—Ç–Ω—ã–µ (AL, AH, BL, BH, ...)
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–π—Ç–∞–º–∏:
mov al, 'A'     ; –ó–∞–ø–∏—Å—å —Å–∏–º–≤–æ–ª–∞
and bl, 0xF0    ; –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏—Ç–æ–≤
---

## üîπ 2. –£–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –∏–Ω–¥–µ–∫—Å–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏.

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|---------------------------------------------------------------------------|
| ESI | Source Index (–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π: lods, movs)            |
| EDI | Destination Index (–ø—Ä–∏—ë–º–Ω–∏–∫ –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π)                       |
| ESP | Stack Pointer (—É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–µ—Ä—à–∏–Ω—É —Å—Ç–µ–∫–∞)                                |
| EBP | Base Pointer (–±–∞–∑–∞ —Å—Ç–µ–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º –∏ –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º) |

–ü—Ä–∏–º–µ—Ä:
mov esi, source  ; –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫
mov edi, dest    ; –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø—Ä–∏—ë–º–Ω–∏–∫
rep movsb        ; –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–π—Ç–æ–≤
---

## üîπ 3. –°–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã
–û–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å–µ–≥–º–µ–Ω—Ç—ã –ø–∞–º—è—Ç–∏ (–∞–∫—Ç—É–∞–ª—å–Ω—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –∏ –∑–∞—â–∏—â—ë–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ –±–µ–∑ —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–∏).

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|---------------------------------------------------------------------------|
| CS  | Code Segment (—Å–µ–≥–º–µ–Ω—Ç –∫–æ–¥–∞)                                               |
| DS  | Data Segment (—Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö)                                             |
| SS  | Stack Segment (—Å–µ–≥–º–µ–Ω—Ç —Å—Ç–µ–∫–∞)                                             |
| ES  | Extra Segment (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö)                             |
| FS  | –î–æ–ø. —Å–µ–≥–º–µ–Ω—Ç (–≤ Linux —Ö—Ä–∞–Ω–∏—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ TLS - Thread Local Storage)     |
| GS  | –î–æ–ø. —Å–µ–≥–º–µ–Ω—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –≤ —è–¥—Ä–µ –û–°)              |

–ü—Ä–∏–º–µ—Ä (—Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º):
mov ax, 0x07C0
mov ds, ax  ; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
---

## üîπ 4. –†–µ–≥–∏—Å—Ç—Ä—ã —Ñ–ª–∞–≥–æ–≤ (EFLAGS/RFLAGS)
–•—Ä–∞–Ω—è—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞. –ö–ª—é—á–µ–≤—ã–µ —Ñ–ª–∞–≥–∏:

| –§–ª–∞–≥  | –ù–∞–∑–≤–∞–Ω–∏–µ         | –û–ø–∏—Å–∞–Ω–∏–µ                                      |

> ../Ë£ÇÁ∫π#978:
|-------|------------------|----------------------------------------------|
| CF | Carry Flag       | –ü–µ—Ä–µ–Ω–æ—Å/–∑–∞—ë–º –≤ –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–µ                    |
| ZF | Zero Flag        | –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ = 0                       |
| SF | Sign Flag        | –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π (—Å—Ç–∞—Ä—à–∏–π –±–∏—Ç = 1)    |
| OF | Overflow Flag    | –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–Ω–∞–∫–æ–≤–æ–≥–æ —á–∏—Å–ª–∞                 |
| IF | Interrupt Flag   | –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã—Ö –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–π             |

–ü—Ä–∏–º–µ—Ä:
cmp eax, ebx  ; –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ZF, SF, CF
jz equal      ; –ü–µ—Ä–µ—Ö–æ–¥, –µ—Å–ª–∏ ZF=1
---

## üîπ 5. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å (EIP/RIP)
- EIP (32-bit) / RIP (64-bit) ‚Äî —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
- –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–ø—Ä—è–º—É—é (—Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ jmp, call, ret).

–ü—Ä–∏–º–µ—Ä:
call func  ; –°–æ—Ö—Ä–∞–Ω—è–µ—Ç EIP/RIP –≤ —Å—Ç–µ–∫–µ –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
---

## üîπ 6. –†–µ–≥–∏—Å—Ç—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (CR0-CR4)
–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|---------------------------------------------------------------------------|
| CR0 | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—â–∏—â—ë–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º, —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–µ–π (PG), –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º   |
| CR2 | –ê–¥—Ä–µ—Å, –≤—ã–∑–≤–∞–≤—à–∏–π Page Fault (#PF)                                         |
| CR3 | –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ç–∞–±–ª–∏—Ü—É —Å—Ç—Ä–∞–Ω–∏—Ü (PML4/PDPT)                                  |
| CR4 | –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (PAE, SMEP, UMIP)                                     |

–ü—Ä–∏–º–µ—Ä (–≤–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–∏):
mov eax, cr0
or eax, 0x80000000  ; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏—Ç–∞ PG
mov cr0, eax
---

## üîπ 7. XMM/YMM/ZMM (SIMD-—Ä–µ–≥–∏—Å—Ç—Ä—ã)
–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (SSE, AVX).

| –†–µ–≥–∏—Å—Ç—Ä—ã | –†–∞–∑–º–µ—Ä  | –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏                     |
|----------|---------|-------------------------------|
| XMM0-XMM15 | 128-bit | SSE/SSE2 (movdqa, addps)  |
| YMM0-YMM15 | 256-bit | AVX/AVX2 (vmulps, vpermq) |
| ZMM0-ZMM31 | 512-bit | AVX-512 (vpmadd52luq)       |

–ü—Ä–∏–º–µ—Ä (—Å–ª–æ–∂–µ–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–æ–≤):
movdqa xmm0, [vec1]  ; –ó–∞–≥—Ä—É–∑–∫–∞ 128-–±–∏—Ç–Ω–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞
paddd xmm0, [vec2]   ; –ü–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ–µ —Å–ª–æ–∂–µ–Ω–∏–µ
---

## üîπ 8. –†–µ–≥–∏—Å—Ç—Ä—ã –æ—Ç–ª–∞–¥–∫–∏ (DR0-DR7)
–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç —Ç–æ—á–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∞ (hardware breakpoints).

| –†–µ–≥–∏—Å—Ç—Ä | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                      |
|---------|--------------------------------|
| DR0-DR3 | –ê–¥—Ä–µ—Å–∞ —Ç–æ—á–µ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∞         |
| DR6    | –°—Ç–∞—Ç—É—Å —Ç–æ—á–µ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∞        |
| DR7    | –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∞–º–∏ –æ—Å—Ç–∞–Ω–æ–≤–∞ |

---

## üîπ 9. MSR (Model-Specific Registers)
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º (–¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ rdmsr/wrmsr).

| –†–µ–≥–∏—Å—Ç—Ä  | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                          |
|----------|------------------------------------|
| IA32_EFER | –í–∫–ª—é—á–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ (x86-64) |
| IA32_APIC_BASE | –ê–¥—Ä–µ—Å APIC                      |

–ü—Ä–∏–º–µ—Ä (–≤–∫–ª—é—á–µ–Ω–∏–µ NX-–±–∏—Ç–∞):
mov ecx, 0xC0000080  ; IA32_EFER
rdmsr
or eax, 0x800        ; NX-–±–∏—Ç
wrmsr
---

## üîπ –ò—Ç–æ–≥: –∫–æ–≥–¥–∞ –∫–∞–∫–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?
| –ó–∞–¥–∞—á–∞                | –†–µ–≥–∏—Å—Ç—Ä—ã                          |
|-----------------------|----------------------------------|
| –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞            | EAX, EBX, ECX, EDX               |
| –ê–¥—Ä–µ—Å–∞—Ü–∏—è –ø–∞–º—è—Ç–∏      | ESI, EDI, ESP, EBP               |
| –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–º    | EIP/RIP                          |
| –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç–µ–∫–æ–º      | ESP, EBP                         |
| SIMD-–æ–ø–µ—Ä–∞—Ü–∏–∏         | XMM0-XMM15, YMM0-YMM15           |
| –°–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ | CR0-CR4, MSR, EFLAGS       |

–ü—Ä–∏–º–µ—Ä —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ Linux (32-bit):
mov eax, 1   ; sys_exit
mov ebx, 0   ; —Å—Ç–∞—Ç—É—Å
int 0x80
–ü—Ä–∏–º–µ—Ä –≤ 64-bit:
mov rax, 60  ; sys_exit
mov rdi, 0   ; —Å—Ç–∞—Ç—É—Å
syscall
