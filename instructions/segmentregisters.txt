> ../Ë£ÇÁ∫π#978:
### –°–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ x86/x86-64: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ

–°–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã ‚Äî –∫–ª—é—á–µ–≤–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã x86, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é, –∑–∞—â–∏—Ç—É –∏ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å. –ò—Ö –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.

---

## üîπ 1. –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã

| –†–µ–≥–∏—Å—Ç—Ä | –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ       | –û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                                 |
|---------|-----------------------|-----------------------------------------------------------------------------------|
| CS  | Code Segment          | –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–µ–≥–º–µ–Ω—Ç –∫–æ–¥–∞ (–≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)                                 |
| DS  | Data Segment          | –°–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é                                                       |
| ES  | Extra Segment         | –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö)                |
| SS  | Stack Segment         | –°–µ–≥–º–µ–Ω—Ç —Å—Ç–µ–∫–∞ (–∞–¥—Ä–µ—Å—É–µ—Ç —Å—Ç–µ–∫–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: push, pop, call)                 |
| FS  | Extra Segment 2       | –û—Å–æ–±—ã–π —Å–µ–≥–º–µ–Ω—Ç (–≤ Linux: TLS ‚Äî Thread-Local Storage)                              |
| GS  | Extra Segment 3       | –°–∏—Å—Ç–µ–º–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç (–≤ —è–¥—Ä–µ: —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö CPU)                          |

---

## üîπ 2. –†–∞–±–æ—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ (16-bit)
–í —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ DOS –∏–ª–∏ –∑–∞–≥—Ä—É–∑—á–∏–∫–µ) —Å–µ–≥–º–µ–Ω—Ç—ã –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –±–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏.

### 2.1. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∞–¥—Ä–µ—Å–∞
–§–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å = (–°–µ–≥–º–µ–Ω—Ç << 4) + –°–º–µ—â–µ–Ω–∏–µ

–ü—Ä–∏–º–µ—Ä:
mov ax, 0x07C0  ; –°–µ–≥–º–µ–Ω—Ç
mov ds, ax      ; –£—Å—Ç–∞–Ω–æ–≤–∫–∞ DS
mov bx, 0x1234  ; –°–º–µ—â–µ–Ω–∏–µ
; –§–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: 0x07C00 + 0x1234 = 0x08E34
### 2.2. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- –ö–∞–∂–¥—ã–π —Å–µ–≥–º–µ–Ω—Ç –∏–º–µ–µ—Ç —Ä–∞–∑–º–µ—Ä 64 –ö–ë (16-–±–∏—Ç–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ).
- –ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤: 0x0000:0x1000 = 0x0100:0x0000.

---

## üîπ 3. –†–∞–±–æ—Ç–∞ –≤ –∑–∞—â–∏—â—ë–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ (32-bit)
–í –∑–∞—â–∏—â—ë–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å–µ–≥–º–µ–Ω—Ç—ã –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã, —É–∫–∞–∑—ã–≤–∞—é—â–∏–µ –Ω–∞ –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã –≤ GDT/LDT.

### 3.1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
15              3  2   1  0
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îê
‚îÇ     –ò–Ω–¥–µ–∫—Å    ‚îÇTI ‚îÇRPL‚îÇ   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îò
- –ò–Ω–¥–µ–∫—Å: –ù–æ–º–µ—Ä –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞ –≤ GDT/LDT.
- TI (Table Indicator): 0 = GDT, 1 = LDT.
- RPL (Requested Privilege Level): –£—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π (0-3).

### 3.2. –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–µ–≥–º–µ–Ω—Ç–∞ –≤ GDT
–ö–∞–∂–¥—ã–π –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä ‚Äî —ç—Ç–æ 8-–±–∞–π—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
struc gdt_entry
    .limit_low   resw 1  ; –õ–∏–º–∏—Ç (–±–∏—Ç—ã 0-15)
    .base_low    resw 1  ; –ë–∞–∑–∞ (–±–∏—Ç—ã 0-15)
    .base_middle resb 1  ; –ë–∞–∑–∞ (–±–∏—Ç—ã 16-23)
    .access      resb 1  ; –ë–∞–π—Ç –¥–æ—Å—Ç—É–ø–∞ (P, DPL, S, Type...)
    .granularity resb 1  ; –ì—Ä–∞–Ω—É–ª—è—Ä–Ω–æ—Å—Ç—å (G, D/B, L, AVL)
    .base_high   resb 1  ; –ë–∞–∑–∞ (–±–∏—Ç—ã 24-31)
endstruc
### 3.3. –ü—Ä–∏–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
mov ax, 0x10      ; –°–µ–ª–µ–∫—Ç–æ—Ä (–∏–Ω–¥–µ–∫—Å 2 –≤ GDT, RPL=0)
mov ds, ax        ; –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ DS
---

## üîπ 4. –î–ª–∏–Ω–Ω—ã–π —Ä–µ–∂–∏–º (x86-64)
–í 64-–±–∏—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å–µ–≥–º–µ–Ω—Ç–Ω–∞—è –∞–¥—Ä–µ—Å–∞—Ü–∏—è –ø–æ—á—Ç–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫—Ä–æ–º–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

### 4.1. –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- CS/SS/DS/ES –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è (–±–∞–∑–∞ = 0, –ª–∏–º–∏—Ç = –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π).
- FS/GS —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
  - FS: –£–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ TLS (Thread-Local Storage).
  - GS: –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —è–¥—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, gs:[0x0] ‚Äî —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ current_task –≤ Linux).
  
### 4.2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑—ã –¥–ª—è FS/GS
–ß–µ—Ä–µ–∑ MSR-—Ä–µ–≥–∏—Å—Ç—Ä—ã:
mov ecx, 0xC0000100  ; MSR_FS_BASE
mov eax, base_low    ; –ú–ª–∞–¥—à–∏–µ 32 –±–∏—Ç–∞
mov edx, base_high   ; –°—Ç–∞—Ä—à–∏–µ 32 –±–∏—Ç–∞
wrmsr
---

## üîπ 5. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
### 5.1. –î–æ—Å—Ç—É–ø –∫ TLS –≤ Linux
mov rax, [fs:0x0]  ; –ß—Ç–µ–Ω–∏–µ –∏–∑ TLS (–Ω–∞–ø—Ä–∏–º–µ—Ä, errno)
### 5.2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –û–°
–ü—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á —è–¥—Ä–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç:
- CS/SS –¥–ª—è –∫–æ–¥–∞ –∏ —Å—Ç–µ–∫–∞.
- FS/GS –¥–ª—è TLS –∏ CPU-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

### 5.3. –ü—Ä–∏–º–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GDT
`asm
gdt_start:

> ../Ë£ÇÁ∫π#978:
dq 0x0000000000000000  ; Null-–¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä
gdt_code:
    dw 0xFFFF       ; –õ–∏–º–∏—Ç
    dw 0x0000       ; –ë–∞–∑–∞
    db 0x00         ; –ë–∞–∑–∞
    db 0b10011010   ; P=1, DPL=0, Code, Exec/Read
    db 0b11001111   ; G=1, D/B=1
    db 0x00         ; –ë–∞–∑–∞
gdt_data:
    dw 0xFFFF       ; –õ–∏–º–∏—Ç
    dw 0x0000       ; –ë–∞–∑–∞
    db 0x00         ; –ë–∞–∑–∞
    db 0b10010010   ; P=1, DPL=0, Data, Read/Write
    db 0b11001111   ; G=1, D/B=1
    db 0x00         ; –ë–∞–∑–∞
gdt_end:

; –ó–∞–≥—Ä—É–∑–∫–∞ GDT
lgdt [gdt_descriptor]

---

## **üîπ 6. –û—Ç–ª–∏—á–∏—è –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏**
| –†–µ–∂–∏–º             | –†–æ–ª—å —Å–µ–≥–º–µ–Ω—Ç–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤                          |
|-------------------|--------------------------------------------------|
| **–†–µ–∞–ª—å–Ω—ã–π**      | –ë–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ (`—Å–µ–≥–º–µ–Ω—Ç << 4 + —Å–º–µ—â–µ–Ω–∏–µ`) |
| **–ó–∞—â–∏—â—ë–Ω–Ω—ã–π**    | –ó–∞—â–∏—â—ë–Ω–Ω–∞—è –∞–¥—Ä–µ—Å–∞—Ü–∏—è —á–µ—Ä–µ–∑ GDT/LDT               |
| **–î–ª–∏–Ω–Ω—ã–π (64-bit)** | –¢–æ–ª—å–∫–æ FS/GS —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∑–Ω–∞—á–µ–Ω–∏–µ                |

---

## **üîπ 7. –ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏**
1. **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `DS` –¥–ª—è —Å—Ç–µ–∫–∞**:
   
asm
   mov ax, ss
   mov ds, ax  ; –û—à–∏–±–∫–∞! –°—Ç–µ–∫ –∏ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã.
  
2. **–ù–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã**:
   
asm
   mov [eax], ebx  ; –ï—Å–ª–∏ DS –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ RPL
  
3. **–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ RPL**:
   - –£—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π (RPL) –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å DPL –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞.

---

## **üîπ –ò—Ç–æ–≥**
- **–†–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º**: –°–µ–≥–º–µ–Ω—Ç—ã ‚Äî —ç—Ç–æ —Å–¥–≤–∏–≥–∏ –∞–¥—Ä–µ—Å–æ–≤.
- **–ó–∞—â–∏—â—ë–Ω–Ω—ã–π —Ä–µ–∂–∏–º**: –°–µ–≥–º–µ–Ω—Ç—ã ‚Äî —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –≤ GDT/LDT.
- **x86-64**: –¢–æ–ª—å–∫–æ `FS/GS` –ø–æ–ª–µ–∑–Ω—ã (–¥–ª—è TLS –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä).
- **–í–∞–∂–Ω–æ**: –í—Å–µ–≥–¥–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–µ–≥–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–∞–º—è—Ç–∏!

**–ü—Ä–∏–º–µ—Ä –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Ä–µ–∂–∏–º:**
asm
cli
lgdt [gdt_descriptor]
mov eax, cr0
or eax, 1
mov cr0, eax
jmp 0x08:protected_mode  ; Far jump –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è CS
`
